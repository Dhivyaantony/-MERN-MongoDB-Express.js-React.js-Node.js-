{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91974\\\\Desktop\\\\book your court\\\\book\\\\src\\\\Components\\\\Common\\\\SignUpBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from 'mdbreact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegistrationForm = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [confirmPasswordError, setConfirmPasswordError] = useState('');\n  const validateEmail = email => {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,4}))$/;\n    return re.test(email);\n  };\n  const validatePassword = password => {\n    const re = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,15}$/;\n    return re.test(password);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    setEmailError(validateEmail(email) ? '' : 'Please enter a valid email address.');\n    setPasswordError(validatePassword(password) ? '' : 'Please enter a valid password.');\n    setConfirmPasswordError(password === confirmPassword ? '' : 'Passwords do not match.');\n    if (validateEmail(email) && validatePassword(password) && password === confirmPassword) {\n      // Your registration logic here\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(MDBContainer, {\n    children: /*#__PURE__*/_jsxDEV(MDBRow, {\n      children: /*#__PURE__*/_jsxDEV(MDBCol, {\n        md: \"6\",\n        className: \"offset-md-3\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"h4 text-center\",\n            children: \"Registration Form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grey-text\",\n            children: [/*#__PURE__*/_jsxDEV(MDBInput, {\n              label: \"Your email\",\n              icon: \"envelope\",\n              group: true,\n              type: \"email\",\n              validate: true,\n              error: \"wrong\",\n              success: \"right\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              className: emailError ? 'is-invalid' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-danger\",\n              children: emailError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n              label: \"Your password\",\n              icon: \"lock\",\n              group: true,\n              type: \"password\",\n              validate: true,\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              className: passwordError ? 'is-invalid' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-danger\",\n              children: passwordError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n              label: \"Confirm your password\",\n              icon: \"exclamation-triangle\",\n              group: true,\n              type: \"password\",\n              validate: true,\n              value: confirmPassword,\n              onChange: e => setConfirmPassword(e.target.value),\n              className: confirmPasswordError ? 'is-invalid' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-danger\",\n              children: confirmPasswordError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n              color: \"primary\",\n              type: \"submit\",\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(RegistrationForm, \"ZtYuK5v0r631vKNvWibWlxwJwWc=\");\n_c = RegistrationForm;\nexport default si;\nvar _c;\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"names":["React","useState","MDBContainer","MDBRow","MDBCol","MDBInput","MDBBtn","jsxDEV","_jsxDEV","RegistrationForm","_s","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","emailError","setEmailError","passwordError","setPasswordError","confirmPasswordError","setConfirmPasswordError","validateEmail","re","test","validatePassword","handleSubmit","event","preventDefault","children","md","className","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","label","icon","group","type","validate","error","success","value","onChange","e","target","color","_c","si","$RefreshReg$"],"sources":["C:/Users/91974/Desktop/book your court/book/src/Components/Common/SignUpBox.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from 'mdbreact';\r\n\r\nconst RegistrationForm = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [emailError, setEmailError] = useState('');\r\n  const [passwordError, setPasswordError] = useState('');\r\n  const [confirmPasswordError, setConfirmPasswordError] = useState('');\r\n\r\n  const validateEmail = (email) => {\r\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,4}))$/;\r\n    return re.test(email);\r\n  };\r\n\r\n  const validatePassword = (password) => {\r\n    const re = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,15}$/;\r\n    return re.test(password);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    setEmailError(validateEmail(email) ? '' : 'Please enter a valid email address.');\r\n    setPasswordError(validatePassword(password) ? '' : 'Please enter a valid password.');\r\n    setConfirmPasswordError(password === confirmPassword ? '' : 'Passwords do not match.');\r\n    \r\n    if (validateEmail(email) && validatePassword(password) && password === confirmPassword) {\r\n      // Your registration logic here\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBRow>\r\n        <MDBCol md='6' className='offset-md-3'>\r\n          <form onSubmit={handleSubmit}>\r\n            <p className='h4 text-center'>Registration Form</p>\r\n            <div className='grey-text'>\r\n              <MDBInput\r\n                label='Your email'\r\n                icon='envelope'\r\n                group\r\n                type='email'\r\n                validate\r\n                error='wrong'\r\n                success='right'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                className={emailError ? 'is-invalid' : ''}\r\n              />\r\n              <p className='text-danger'>{emailError}</p>\r\n\r\n              <MDBInput\r\n                label='Your password'\r\n                icon='lock'\r\n                group\r\n                type='password'\r\n                validate\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                className={passwordError ? 'is-invalid' : ''}\r\n              />\r\n              <p className='text-danger'>{passwordError}</p>\r\n\r\n              <MDBInput\r\n                label='Confirm your password'\r\n                icon='exclamation-triangle'\r\n                group\r\n                type='password'\r\n                validate\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                className={confirmPasswordError ? 'is-invalid' : ''}\r\n              />\r\n              <p className='text-danger'>{confirmPasswordError}</p>\r\n            </div>\r\n            <div className='text-center'>\r\n              <MDBBtn color='primary' type='submit'>\r\n                Register\r\n              </MDBBtn>\r\n            </div>\r\n          </form>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default si;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}