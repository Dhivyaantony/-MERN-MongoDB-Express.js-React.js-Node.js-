{"ast":null,"code":"import axios from \"axios\";\nimport { BASE_URL } from \"../Constants/constants\";\nconst AxiosInstance = axios.create({\n  baseURL: BASE_URL\n});\nAxiosInstance.interceptors.request.use(function (config) {\n  const token = localStorage.getItem('token');\n\n  // Log the token to the console for debugging\n  console.log(\"Token:\", token);\n\n  // Add the Authorization header only if the token is available\n  if (token) {\n    config.headers['Authorization'] = 'Bearer ' + token;\n  }\n  return config;\n});\nexport default AxiosInstance;","map":{"version":3,"names":["axios","BASE_URL","AxiosInstance","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","console","log","headers"],"sources":["C:/Users/91974/Desktop/book your court/book/src/config/AxiosInstance.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { BASE_URL } from \"../Constants/constants\";\r\n\r\nconst AxiosInstance = axios.create({\r\n  baseURL: BASE_URL,\r\n});\r\n\r\nAxiosInstance.interceptors.request.use(function (config) {\r\n  const token = localStorage.getItem('token');\r\n\r\n  // Log the token to the console for debugging\r\n  console.log(\"Token:\", token);\r\n\r\n  // Add the Authorization header only if the token is available\r\n  if (token) {\r\n    config.headers['Authorization'] = 'Bearer ' + token;\r\n  }\r\n\r\n  return config;\r\n});\r\n\r\nexport default AxiosInstance;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,wBAAwB;AAEjD,MAAMC,aAAa,GAAGF,KAAK,CAACG,MAAM,CAAC;EACjCC,OAAO,EAAEH;AACX,CAAC,CAAC;AAEFC,aAAa,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,UAAUC,MAAM,EAAE;EACvD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;;EAE3C;EACAC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEJ,KAAK,CAAC;;EAE5B;EACA,IAAIA,KAAK,EAAE;IACTD,MAAM,CAACM,OAAO,CAAC,eAAe,CAAC,GAAG,SAAS,GAAGL,KAAK;EACrD;EAEA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,eAAeN,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}