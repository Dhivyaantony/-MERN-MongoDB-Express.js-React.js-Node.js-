{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './SignUpBox.css';\nimport axios from 'axios';\nimport { BASE_URL } from '../../Constants/constants';\nimport { MDBBtn, MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody, MDBInput, MDBCheckbox, MDBIcon } from 'mdb-react-ui-kit';\nconst SignUpBox = ({\n  setBoxName\n}) => {\n  _s();\n  const handleLogin = () => {\n    setBoxName('login');\n  };\n  const [signUpData, setsignUpDAta] = useState({\n    fName: '',\n    lName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  useEffect(() => {\n    console.log(signUpData);\n  }, [signUpData]);\n\n  /*const [fname, setFname] = useState('');\r\n   const [lname, setLname] = useState('');\r\n  \n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  \n  const [error, setError] = useState('');*/\n  const handleRegister = async () => {\n    try {\n      const response = await axios.post(`${BASE_URL}/auth/signUp`, signUpData);\n      if (response.data.message === \"signup success\") {\n        setBoxName('login');\n      }\n      if (response.data.message === \"email already exist\") {\n        alert('Email already exists');\n      }\n    } catch (error) {\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.error(\"Server responded with non-success status\", error.response.status);\n      } else if (error.request) {\n        // The request was made but no response was received\n        console.error(\"No response received from server\");\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.error(\"Error during request setup\", error.message);\n      }\n      alert('Something went wrong');\n    }\n  };\n\n  /*const validate = () => {\r\n     if (!fname || !email || !password ) {\r\n       setError('Please fill out all fields');\r\n       return false;\r\n     }\r\n  \n     if (password.length < 6) {\r\n       setError('Password should be at least 6 characters long');\r\n       return false;\r\n     }\r\n  \n     setError('');\r\n     return true;\r\n  };\r\n  \n  const handleSubmit = (e) => {\r\n     e.preventDefault();\r\n  \n     if (validate()) {\r\n       // submit form\r\n       console.log('Form submitted:', { name, email, password });\r\n     }\r\n  };\r\n  \n  return (\r\n     /*<div className='container col-5'>\r\n     <form className=\"signup-form\" onSubmit={handleSubmit}>\r\n       <h2>Sign Up</h2>\r\n       <input\r\n         type=\"text\"\r\n         placeholder=\"Name\"\r\n         value={name}\r\n         onChange={(e) => setName(e.target.value)}\r\n       />\r\n       <input\r\n         type=\"email\"\r\n         placeholder=\"Email\"\r\n         value={email}\r\n         onChange={(e) => setEmail(e.target.value)}\r\n       />\r\n       <input\r\n         type=\"password\"\r\n         placeholder=\"Password\"\r\n         value={password}\r\n         onChange={(e) => setPassword(e.target.value)}\r\n       />\r\n       {error && <p className=\"error\">{error}</p>}\r\n       <button type=\"submit\">Sign Up</button>\r\n       <div className='click'>\r\n  <p><span onClick={handleLogin}>go to login</span> </p>\r\n       </div>\r\n     </form></div>\r\n     </>\r\n  );\r\n  /*\r\n  <>      \r\n   <MDBCol md='6' >\r\n  \n  <MDBCard className='my-5 bg-glass'>\r\n  <MDBCardBody className='p-5'>\r\n  \n    <MDBRow>\r\n      <MDBCol col='4'>\r\n        <MDBInput wrapperClass='mb-4' label='First name' id='form1' type='text' value={signUpData.fName} onChange={(e)=>{setsignUpDAta({...setsignUpDAta,fName:e.target.value })}}/>\r\n        \r\n      </MDBCol>\r\n  \n      <MDBCol col='4'>\r\n        <MDBInput wrapperClass='mb-4' label='Last name' id='form2' type='text'value={signUpData.lName} onChange={(e)=>{setsignUpDAta({...setsignUpDAta,lName:e.target.value })}}/>\r\n      </MDBCol>\r\n    </MDBRow>\r\n  \n    <MDBInput wrapperClass='mb-4' label='Email' id='form3' type='email'value={signUpData.email} onChange={(e)=>{setsignUpDAta({...setsignUpDAta,email:e.target.value })}}/>\r\n    <MDBInput wrapperClass='mb-4' label='Password' id='form4' type='password'onChange={(e)=>{setsignUpDAta({...setsignUpDAta,password:e.target.value })}}/>\r\n    <MDBInput wrapperClass='mb-4' label='confirm Password' id='form5' type='password'onChange={(e)=>{setsignUpDAta({...setsignUpDAta,confirmPassword:e.target.value })}}/>\r\n  \n    \r\n  \n    <MDBBtn className='w-100 mb-4' size='md'onClick={handleRegister}>sign up</MDBBtn>\r\n  \n    <div className=\"text-center\">\r\n   \r\n  <p><span onClick={handleLogin}>go to login</span> </p>\r\n     \r\n      <p>or sign up with:</p>\r\n  \n     \r\n    </div> \r\n  \n  </MDBCardBody>\r\n  </MDBCard>\r\n  \n  </MDBCol>\r\n  </>\r\n  )*/\n};\n_s(SignUpBox, \"VYmE76YSEaVfoaiX5ZtXNpDccOM=\");\n_c = SignUpBox;\nexport default SignUpBox;\nvar _c;\n$RefreshReg$(_c, \"SignUpBox\");","map":{"version":3,"names":["React","useEffect","useState","axios","BASE_URL","MDBBtn","MDBContainer","MDBRow","MDBCol","MDBCard","MDBCardBody","MDBInput","MDBCheckbox","MDBIcon","SignUpBox","setBoxName","_s","handleLogin","signUpData","setsignUpDAta","fName","lName","email","password","confirmPassword","console","log","handleRegister","response","post","data","message","alert","error","status","request","_c","$RefreshReg$"],"sources":["C:/Users/91974/Desktop/book your court/book/src/Components/Common/SignUpBox.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './SignUpBox.css';\r\nimport axios from 'axios';\r\nimport {BASE_URL}from '../../Constants/constants';\r\nimport {\r\n  MDBBtn,\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBInput,\r\n  MDBCheckbox,\r\n  MDBIcon\r\n}\r\nfrom 'mdb-react-ui-kit';\r\n\r\nconst SignUpBox = ({setBoxName})=> {\r\n  const handleLogin=()=>{\r\n    setBoxName('login')\r\n}\r\nconst [signUpData,setsignUpDAta]=useState(\r\n  {\r\n    fName:'',\r\n    lName:'',\r\n    email:'',\r\n    password:'',\r\n    confirmPassword:''\r\n    })\r\n    \r\n    useEffect(()=>{\r\n      console.log(signUpData);\r\n    },[signUpData])\r\n    \r\n      \r\n    \r\n  \r\n /*const [fname, setFname] = useState('');\r\n  const [lname, setLname] = useState('');\r\n\r\n const [email, setEmail] = useState('');\r\n const [password, setPassword] = useState('');\r\n const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n const [error, setError] = useState('');*/\r\n const handleRegister = async () => {\r\n  try {\r\n    const response = await axios.post(`${BASE_URL}/auth/signUp`, signUpData);\r\n    \r\n    if (response.data.message === \"signup success\") {\r\n      setBoxName('login');\r\n    }\r\n\r\n    if (response.data.message === \"email already exist\") {\r\n      alert('Email already exists');\r\n    }\r\n  } catch (error) {\r\n    if (error.response) {\r\n      // The request was made and the server responded with a status code\r\n      // that falls out of the range of 2xx\r\n      console.error(\"Server responded with non-success status\", error.response.status);\r\n    } else if (error.request) {\r\n      // The request was made but no response was received\r\n      console.error(\"No response received from server\");\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      console.error(\"Error during request setup\", error.message);\r\n    }\r\n    alert('Something went wrong');\r\n  }\r\n};\r\n\r\n\r\n /*const validate = () => {\r\n    if (!fname || !email || !password ) {\r\n      setError('Please fill out all fields');\r\n      return false;\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      setError('Password should be at least 6 characters long');\r\n      return false;\r\n    }\r\n\r\n    setError('');\r\n    return true;\r\n };\r\n\r\n const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (validate()) {\r\n      // submit form\r\n      console.log('Form submitted:', { name, email, password });\r\n    }\r\n };\r\n\r\n return (\r\n    /*<div className='container col-5'>\r\n    <form className=\"signup-form\" onSubmit={handleSubmit}>\r\n      <h2>Sign Up</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Name\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      {error && <p className=\"error\">{error}</p>}\r\n      <button type=\"submit\">Sign Up</button>\r\n      <div className='click'>\r\n<p><span onClick={handleLogin}>go to login</span> </p>\r\n      </div>\r\n    </form></div>\r\n    </>\r\n );\r\n /*\r\n <>      \r\n  <MDBCol md='6' >\r\n\r\n <MDBCard className='my-5 bg-glass'>\r\n <MDBCardBody className='p-5'>\r\n\r\n   <MDBRow>\r\n     <MDBCol col='4'>\r\n       <MDBInput wrapperClass='mb-4' label='First name' id='form1' type='text' value={signUpData.fName} onChange={(e)=>{setsignUpDAta({...setsignUpDAta,fName:e.target.value })}}/>\r\n       \r\n     </MDBCol>\r\n\r\n     <MDBCol col='4'>\r\n       <MDBInput wrapperClass='mb-4' label='Last name' id='form2' type='text'value={signUpData.lName} onChange={(e)=>{setsignUpDAta({...setsignUpDAta,lName:e.target.value })}}/>\r\n     </MDBCol>\r\n   </MDBRow>\r\n\r\n   <MDBInput wrapperClass='mb-4' label='Email' id='form3' type='email'value={signUpData.email} onChange={(e)=>{setsignUpDAta({...setsignUpDAta,email:e.target.value })}}/>\r\n   <MDBInput wrapperClass='mb-4' label='Password' id='form4' type='password'onChange={(e)=>{setsignUpDAta({...setsignUpDAta,password:e.target.value })}}/>\r\n   <MDBInput wrapperClass='mb-4' label='confirm Password' id='form5' type='password'onChange={(e)=>{setsignUpDAta({...setsignUpDAta,confirmPassword:e.target.value })}}/>\r\n\r\n   \r\n\r\n   <MDBBtn className='w-100 mb-4' size='md'onClick={handleRegister}>sign up</MDBBtn>\r\n\r\n   <div className=\"text-center\">\r\n  \r\n<p><span onClick={handleLogin}>go to login</span> </p>\r\n    \r\n     <p>or sign up with:</p>\r\n\r\n    \r\n   </div> \r\n\r\n </MDBCardBody>\r\n</MDBCard>\r\n\r\n</MDBCol>\r\n</>\r\n )*/\r\n}\r\nexport default SignUpBox;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AACxB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,QAAM,2BAA2B;AACjD,SACEC,MAAM,EACNC,YAAY,EACZC,MAAM,EACNC,MAAM,EACNC,OAAO,EACPC,WAAW,EACXC,QAAQ,EACRC,WAAW,EACXC,OAAO,QAEJ,kBAAkB;AAEvB,MAAMC,SAAS,GAAGA,CAAC;EAACC;AAAU,CAAC,KAAI;EAAAC,EAAA;EACjC,MAAMC,WAAW,GAACA,CAAA,KAAI;IACpBF,UAAU,CAAC,OAAO,CAAC;EACvB,CAAC;EACD,MAAM,CAACG,UAAU,EAACC,aAAa,CAAC,GAACjB,QAAQ,CACvC;IACEkB,KAAK,EAAC,EAAE;IACRC,KAAK,EAAC,EAAE;IACRC,KAAK,EAAC,EAAE;IACRC,QAAQ,EAAC,EAAE;IACXC,eAAe,EAAC;EAChB,CAAC,CAAC;EAEFvB,SAAS,CAAC,MAAI;IACZwB,OAAO,CAACC,GAAG,CAACR,UAAU,CAAC;EACzB,CAAC,EAAC,CAACA,UAAU,CAAC,CAAC;;EAKlB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,MAAMS,cAAc,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,IAAI,CAAE,GAAEzB,QAAS,cAAa,EAAEc,UAAU,CAAC;MAExE,IAAIU,QAAQ,CAACE,IAAI,CAACC,OAAO,KAAK,gBAAgB,EAAE;QAC9ChB,UAAU,CAAC,OAAO,CAAC;MACrB;MAEA,IAAIa,QAAQ,CAACE,IAAI,CAACC,OAAO,KAAK,qBAAqB,EAAE;QACnDC,KAAK,CAAC,sBAAsB,CAAC;MAC/B;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,IAAIA,KAAK,CAACL,QAAQ,EAAE;QAClB;QACA;QACAH,OAAO,CAACQ,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAACL,QAAQ,CAACM,MAAM,CAAC;MAClF,CAAC,MAAM,IAAID,KAAK,CAACE,OAAO,EAAE;QACxB;QACAV,OAAO,CAACQ,KAAK,CAAC,kCAAkC,CAAC;MACnD,CAAC,MAAM;QACL;QACAR,OAAO,CAACQ,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAACF,OAAO,CAAC;MAC5D;MACAC,KAAK,CAAC,sBAAshB,EAAA,CAvJKF,SAAS;AAAAsB,EAAA,GAATtB,SAAS;AAwJf,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}