{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91974\\\\Desktop\\\\book your court\\\\book\\\\src\\\\Components\\\\Common\\\\LoginBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './LoginBox.css';\nimport Login from '../../Pages/Login/Login';\nimport axios from 'axios';\nimport { BASE_URL } from '../../Constants/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LoginBox({\n  setBoxName\n}) {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSignUp = () => {\n    setBoxName('signup');\n  };\n  const handleLogin = () => {\n    try {\n      console.log(\"before axios\");\n      axios.post(`${BASE_URL}/auth/login`, signUpData).then(res => {\n        debugger;\n      });\n      if (emai) if (!validateEmail()) {\n        setError('Please enter a valid email address');\n        return;\n      }\n      if (!validatePassword()) {\n        setError('Please enter a valid password');\n        return;\n      }\n      setError('');\n    } catch (error) {\n      console.log(\"Error\", error);\n      setError('Login failed. Please try again.');\n    }\n  };\n  const validateEmail = () => {\n    const re = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n    return re.test(email);\n  };\n  const validatePassword = () => {\n    const re = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\n    return re.test(password);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container col-4 justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit \",\n          onClick: handleSubmit,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(LoginBox, \"TSZhDBNy8CmbxXgprY/vvMmTG1Q=\");\n_c = LoginBox;\n;\nexport default LoginBox;\n\n/*const LoginBox= () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        try{\r\n            axios.post(`${BASE_URL}/auth/login`,email,password).then((res)=>{\r\ndebugger})\r\n            e.preventDefault();\r\n            if (!validateEmail()) {\r\n                setError('Please enter a valid email address');\r\n                return;\r\n            }\r\n            if (!validatePassword()) {\r\n                setError('Please enter a valid password');\r\n                return;\r\n            }\r\n            setError('');\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(\"Error\", error);\r\n\r\n        }\r\n    };\r\n\r\n    const validateEmail = () => {\r\n        const re = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\r\n        return re.test(email);\r\n    };\r\n\r\n    const validatePassword = () => {\r\n        const re = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\r\n        return re.test(password);\r\n    };\r\n\r\n    return (\r\n      <>\r\n      <div className='container col-4'>\r\n            <h1>Login</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                </div>\r\n                {error && <p className=\"error\">{error}</p>}\r\n                <button type=\"submit\"onClick={handleSubmit}>Login</button>\r\n            </form>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default LoginBox;*/\nvar _c;\n$RefreshReg$(_c, \"LoginBox\");","map":{"version":3,"names":["React","useState","Login","axios","BASE_URL","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginBox","setBoxName","_s","email","setEmail","password","setPassword","handleSignUp","handleLogin","console","log","post","signUpData","then","res","emai","validateEmail","setError","validatePassword","error","re","test","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","handleSubmit","htmlFor","type","id","name","value","onChange","e","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/91974/Desktop/book your court/book/src/Components/Common/LoginBox.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './LoginBox.css'\r\nimport Login from '../../Pages/Login/Login';\r\nimport axios from 'axios';\r\nimport { BASE_URL } from '../../Constants/constants';\r\nfunction LoginBox ({setBoxName})  {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    \r\n\r\n    const handleSignUp =  () => {\r\n        setBoxName('signup')\r\n    }\r\n    const handleLogin=()=>{\r\n\r\n        try {\r\n            console.log(\"before axios\");\r\n             axios.post(`${BASE_URL}/auth/login`,signUpData).then((res)=>{\r\n                debugger\r\n             });\r\n            if (emai)\r\n\r\n            if (!validateEmail()) {\r\n                setError('Please enter a valid email address');\r\n                return;\r\n            }\r\n\r\n            if (!validatePassword()) {\r\n                setError('Please enter a valid password');\r\n                return;\r\n            }\r\n\r\n            setError('');\r\n        } catch (error) {\r\n            console.log(\"Error\", error);\r\n            setError('Login failed. Please try again.');\r\n        }\r\n    };\r\n\r\n    const validateEmail = () => {\r\n        const re = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\r\n        return re.test(email);\r\n    };\r\n\r\n    const validatePassword = () => {\r\n        const re = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\r\n        return re.test(password);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className='container col-4 justify-content-center'>\r\n                <h1>Login</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    {error && <p className=\"error\">{error}</p>}\r\n                    <button type=\"submit \"onClick={handleSubmit}>Login</button>\r\n                </form>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LoginBox;\r\n\r\n/*const LoginBox= () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        try{\r\n            axios.post(`${BASE_URL}/auth/login`,email,password).then((res)=>{\r\ndebugger})\r\n            e.preventDefault();\r\n            if (!validateEmail()) {\r\n                setError('Please enter a valid email address');\r\n                return;\r\n            }\r\n            if (!validatePassword()) {\r\n                setError('Please enter a valid password');\r\n                return;\r\n            }\r\n            setError('');\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(\"Error\", error);\r\n\r\n        }\r\n    };\r\n\r\n    const validateEmail = () => {\r\n        const re = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\r\n        return re.test(email);\r\n    };\r\n\r\n    const validatePassword = () => {\r\n        const re = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\r\n        return re.test(password);\r\n    };\r\n\r\n    return (\r\n      <>\r\n      <div className='container col-4'>\r\n            <h1>Login</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                </div>\r\n                {error && <p className=\"error\">{error}</p>}\r\n                <button type=\"submit\"onClick={handleSubmit}>Login</button>\r\n            </form>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default LoginBox;*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}