{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91974\\\\Desktop\\\\book your court\\\\book\\\\src\\\\Components\\\\Common\\\\LoginBox.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// ... (imports)\n\nconst LoginBox = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n  const validateForm = () => {\n    let errors = {};\n    if (email.trim() === '') {\n      errors.email = 'Email is required';\n    }\n    if (password.trim() === '') {\n      errors.password = 'Password is required';\n    }\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n    try {\n      if (email && password) {\n        const response = await axios.post(`${BASE_URL}/auth/login`, {\n          email,\n          password\n        });\n        if (response.data && response.data.message === \"login successful\" && response.data.token) {\n          localStorage.setItem('token', response.data.token);\n          navigate('/home');\n        } else {\n          setErrors({\n            general: \"Invalid credentials\"\n          });\n        }\n      }\n    } catch (err) {\n      console.error(err);\n      setErrors({\n        general: \"An error occurred. Please try again later.\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container col-3 login-box \",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input\",\n            children: errors.general && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: errors.general\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 34\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"but1\",\n            type: \"submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(LoginBox, \"TbCsIamWGxXFPloLN88a2jXOzMo=\", true);\n_c = LoginBox;\nexport default LoginBox;\nvar _c;\n$RefreshReg$(_c, \"LoginBox\");","map":{"version":3,"names":["LoginBox","_s","email","setEmail","useState","password","setPassword","errors","setErrors","navigate","useNavigate","validateForm","trim","Object","keys","length","handleSubmit","e","preventDefault","response","axios","post","BASE_URL","data","message","token","localStorage","setItem","general","err","console","error","_jsxDEV","_Fragment","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","_c","$RefreshReg$"],"sources":["C:/Users/91974/Desktop/book your court/book/src/Components/Common/LoginBox.jsx"],"sourcesContent":["// ... (imports)\r\n\r\nconst LoginBox = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errors, setErrors] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  const validateForm = () => {\r\n    let errors = {};\r\n    if (email.trim() === '') {\r\n      errors.email = 'Email is required';\r\n    }\r\n    if (password.trim() === '') {\r\n      errors.password = 'Password is required';\r\n    }\r\n    setErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (email && password) {\r\n        const response = await axios.post(`${BASE_URL}/auth/login`, { email, password });\r\n\r\n        if (response.data && response.data.message === \"login successful\" && response.data.token) {\r\n          localStorage.setItem('token', response.data.token);\r\n          navigate('/home');\r\n        } else {\r\n          setErrors({ general: \"Invalid credentials\" });\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      setErrors({ general: \"An error occurred. Please try again later.\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className='container col-3 login-box '>\r\n          <h1>Login</h1>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className='input'>\r\n              {/* ... (input fields and labels) */}\r\n              {errors.general && <p>{errors.general}</p>}\r\n            </div>\r\n            <button className='but1' type=\"submit\">Login</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginBox;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}